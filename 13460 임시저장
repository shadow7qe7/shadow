#include<bits/stdc++.h>
using namespace std;
int n,m;
int a[15][15];
void f()
{
    //왼쪽이라 가정
    //이동함수
    while(redisblock&&blueisblock)
    {
            if(a[red_x-1][red_y]==0)redisblock==1;
            if(a[blue_x-1][blue_y]==0)blueisblock==1;
    }
}
int main()
{
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
        string s;
        cin>>s;
        for(int j=1;j<=m;j++)
        {
            if(s[j]=='.')a[i][j]=1;
            //if(s[j]=='R')a[i][j]=0;//레드 좌표 기록
            //if(s[j]=='B')a[i][j]=0;//블루 좌표 기록
            //if(s[j]=='O')a[i][j]=1;//도착지 좌표 기록
            ///if(s[j]=='#')a[i][j]=0;
            ///a[i][j]=0 이면 벽
        }
            
    }
    return 0;
}
//4방위로 레드와 블루가 동시에 움직이되 '차'처럼 거리엔 제한이 없음
//재귀를 이용해서 모든 경우의 수를 찾음과 동시에 블루와 함께 움직이기
//예를들어 왼쪽으로 이동했을때 .RB -> 레드 움직인 후 블루
//블루입장에선 레드가 벽, 레드가 움직이면 블루입장에서 빈공간이됨
//.RB -> R.B -> RB. 이렇게 바뀜
//그래서 움직일 경우
/*
#RB#
##.#
-> 아래로 이동
#R.#
##B#
-> 우측으로 이동
#.R#
##B#
*/
//그래서 결론
// 둘다 이동이 가능하면 둘다 움직이고
//둘 중에 하나만 이동이 가능하면 그것 먼저 움직인 뒤 다른 하나를 움직이고
//둘다 이동이 불가능하면 패스한다
//1이 아니면 무조건 다 벽

/* 2안
    4방위 중 한개의 방위로 이동할때
    한칸씩 세면서 이동하기
    둘 다 못움직일때 스텝이 넘어간다
이동방식 설립 끝
재귀로 모든 구간??
    */
